services:
  flask-app:
    build: .
    container_name: flask_app
    ports:
      - "6000:6000"
    environment:
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo_primary:27017,mongo_replica_1:27017,mongo_replica_2:27017/mydatabase?replicaSet=rs0&authSource=admin
    depends_on:
      - mongo_primary
    networks:
      - mongo_cluster

  mongo_primary:
    image: mongo:6.0
    container_name: mongo_primary
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_REPLICA_SET_NAME=rs0
    command: >
      mongod --replSet rs0 --bind_ip_all --keyFile /etc/mongo-keyfile
    volumes:
      - mongo_primary_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
    networks:
      - mongo_cluster

  mongo_replica_1:
    image: mongo:6.0
    container_name: mongo_replica_1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    command: >
      mongod --replSet rs0 --bind_ip_all --keyFile /etc/mongo-keyfile
    volumes:
      - mongo_replica_1_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
    networks:
      - mongo_cluster

  mongo_replica_2:
    image: mongo:6.0
    container_name: mongo_replica_2
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    command: >
      mongod --replSet rs0 --bind_ip_all --keyFile /etc/mongo-keyfile
    volumes:
      - mongo_replica_2_data:/data/db
      - ./mongo-keyfile:/etc/mongo-keyfile
    networks:
      - mongo_cluster

  mongo_setup:
    image: mongo:6.0
    depends_on:
      - mongo_primary
      - mongo_replica_1
      - mongo_replica_2
    entrypoint: |
      bash -c "
      sleep 10;
      echo 'Initializing replica set...';
      mongosh --host mongo_primary:27017 -u ${MONGO_USERNAME} -p ${MONGO_PASSWORD} <<EOF
        rs.initiate({
          _id: 'rs0',
          members: [
            { _id: 0, host: 'mongo_primary:27017' },
            { _id: 1, host: 'mongo_replica_1:27017' },
            { _id: 2, host: 'mongo_replica_2:27017' }
          ]
        });
        rs.status();
      EOF
      "
    environment:
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
    networks:
      - mongo_cluster

networks:
  mongo_cluster:
    driver: bridge

volumes:
  mongo_primary_data:
  mongo_replica_1_data:
  mongo_replica_2_data:
